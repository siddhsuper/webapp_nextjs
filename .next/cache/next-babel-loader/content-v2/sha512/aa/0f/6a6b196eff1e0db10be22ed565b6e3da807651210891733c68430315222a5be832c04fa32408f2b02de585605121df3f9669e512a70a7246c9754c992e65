{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/siddharth/Documents/work/webapp_nextjs/components/contact/contact-form.js\";\nimport { useState, useEffect } from 'react';\nimport classes from './contact-form.module.css';\nimport Notification from '../ui/notification';\n\nasync function sendContactData(contactDetails) {\n  const response = await fetch('/api/contact', {\n    method: 'POST',\n    body: JSON.stringify(contactDetails),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Something went wrong!');\n  }\n}\n\nfunction ContactForm() {\n  const {\n    0: enteredEmail,\n    1: setEnteredEmail\n  } = useState('');\n  const {\n    0: enteredName,\n    1: setEnteredName\n  } = useState('');\n  const {\n    0: enteredMessage,\n    1: setEnteredMessage\n  } = useState('');\n  const {\n    0: requestStatus,\n    1: setRequestStatus\n  } = useState(); // 'pending', 'success', 'error'\n\n  const {\n    0: requestError,\n    1: setRequestError\n  } = useState();\n  useEffect(() => {\n    if (requestStatus === 'success' || requestStatus === 'error') {\n      const timer = setTimeout(() => {\n        setRequestStatus(null);\n        setRequestError(null);\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [requestStatus]);\n\n  async function sendMessageHandler(event) {\n    event.preventDefault(); // optional: add client-side validation\n\n    setRequestStatus('pending');\n\n    try {\n      await sendContactData({\n        email: enteredEmail,\n        name: enteredName,\n        message: enteredMessage\n      });\n      setRequestStatus('success');\n      setEnteredMessage('');\n      setEnteredEmail('');\n      setEnteredName('');\n    } catch (error) {\n      setRequestError(error.message);\n      setRequestStatus('error');\n    }\n  }\n\n  let notification;\n\n  if (requestStatus === 'pending') {\n    notification = {\n      status: 'pending',\n      title: 'Sending message...',\n      message: 'Your message is on its way!'\n    };\n  }\n\n  if (requestStatus === 'success') {\n    notification = {\n      status: 'success',\n      title: 'Success!',\n      message: 'Message sent successfully!'\n    };\n  }\n\n  if (requestStatus === 'error') {\n    notification = {\n      status: 'error',\n      title: 'Error!',\n      message: requestError\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.contact,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"How can I help you?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: sendMessageHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.controls,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Your Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            required: true,\n            value: enteredEmail,\n            onChange: event => setEnteredEmail(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Your Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            required: true,\n            value: enteredName,\n            onChange: event => setEnteredName(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"message\",\n          children: \"Your Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"message\",\n          rows: \"5\",\n          required: true,\n          value: enteredMessage,\n          onChange: event => setEnteredMessage(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/siddharth/Documents/work/webapp_nextjs/components/contact/contact-form.js"],"names":["useState","useEffect","classes","Notification","sendContactData","contactDetails","response","fetch","method","body","JSON","stringify","headers","data","json","ok","Error","message","ContactForm","enteredEmail","setEnteredEmail","enteredName","setEnteredName","enteredMessage","setEnteredMessage","requestStatus","setRequestStatus","requestError","setRequestError","timer","setTimeout","clearTimeout","sendMessageHandler","event","preventDefault","email","name","error","notification","status","title","contact","form","controls","control","target","value","actions"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;;AAEA,eAAeC,eAAf,CAA+BC,cAA/B,EAA+C;AAC7C,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAD,EAAiB;AAC3CC,IAAAA,MAAM,EAAE,MADmC;AAE3CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,cAAf,CAFqC;AAG3CO,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAHkC,GAAjB,CAA5B;AAQA,QAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;;AAEA,MAAI,CAACR,QAAQ,CAACS,EAAd,EAAkB;AAChB,UAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAL,IAAgB,uBAA1B,CAAN;AACD;AACF;;AAED,SAASC,WAAT,GAAuB;AACrB,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCpB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM;AAAA,OAACqB,WAAD;AAAA,OAAcC;AAAd,MAAgCtB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAAA,OAACuB,cAAD;AAAA,OAAiBC;AAAjB,MAAsCxB,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM;AAAA,OAACyB,aAAD;AAAA,OAAgBC;AAAhB,MAAoC1B,QAAQ,EAAlD,CAJqB,CAIiC;;AACtD,QAAM;AAAA,OAAC2B,YAAD;AAAA,OAAeC;AAAf,MAAkC5B,QAAQ,EAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIwB,aAAa,KAAK,SAAlB,IAA+BA,aAAa,KAAK,OAArD,EAA8D;AAC5D,YAAMI,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7BJ,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD,OAHuB,EAGrB,IAHqB,CAAxB;AAKA,aAAO,MAAMG,YAAY,CAACF,KAAD,CAAzB;AACD;AACF,GATQ,EASN,CAACJ,aAAD,CATM,CAAT;;AAWA,iBAAeO,kBAAf,CAAkCC,KAAlC,EAAyC;AACvCA,IAAAA,KAAK,CAACC,cAAN,GADuC,CAGvC;;AAEAR,IAAAA,gBAAgB,CAAC,SAAD,CAAhB;;AAEA,QAAI;AACF,YAAMtB,eAAe,CAAC;AACpB+B,QAAAA,KAAK,EAAEhB,YADa;AAEpBiB,QAAAA,IAAI,EAAEf,WAFc;AAGpBJ,QAAAA,OAAO,EAAEM;AAHW,OAAD,CAArB;AAKAG,MAAAA,gBAAgB,CAAC,SAAD,CAAhB;AACAF,MAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAJ,MAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD,KAVD,CAUE,OAAOe,KAAP,EAAc;AACdT,MAAAA,eAAe,CAACS,KAAK,CAACpB,OAAP,CAAf;AACAS,MAAAA,gBAAgB,CAAC,OAAD,CAAhB;AACD;AACF;;AAED,MAAIY,YAAJ;;AAEA,MAAIb,aAAa,KAAK,SAAtB,EAAiC;AAC/Ba,IAAAA,YAAY,GAAG;AACbC,MAAAA,MAAM,EAAE,SADK;AAEbC,MAAAA,KAAK,EAAE,oBAFM;AAGbvB,MAAAA,OAAO,EAAE;AAHI,KAAf;AAKD;;AAED,MAAIQ,aAAa,KAAK,SAAtB,EAAiC;AAC/Ba,IAAAA,YAAY,GAAG;AACbC,MAAAA,MAAM,EAAE,SADK;AAEbC,MAAAA,KAAK,EAAE,UAFM;AAGbvB,MAAAA,OAAO,EAAE;AAHI,KAAf;AAKD;;AAED,MAAIQ,aAAa,KAAK,OAAtB,EAA+B;AAC7Ba,IAAAA,YAAY,GAAG;AACbC,MAAAA,MAAM,EAAE,OADK;AAEbC,MAAAA,KAAK,EAAE,QAFM;AAGbvB,MAAAA,OAAO,EAAEU;AAHI,KAAf;AAKD;;AAED,sBACE;AAAS,IAAA,SAAS,EAAEzB,OAAO,CAACuC,OAA5B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,SAAS,EAAEvC,OAAO,CAACwC,IAAzB;AAA+B,MAAA,QAAQ,EAAEV,kBAAzC;AAAA,8BACE;AAAK,QAAA,SAAS,EAAE9B,OAAO,CAACyC,QAAxB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAEzC,OAAO,CAAC0C,OAAxB;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,EAAE,EAAC,OAFL;AAGE,YAAA,QAAQ,MAHV;AAIE,YAAA,KAAK,EAAEzB,YAJT;AAKE,YAAA,QAAQ,EAAGc,KAAD,IAAWb,eAAe,CAACa,KAAK,CAACY,MAAN,CAAaC,KAAd;AALtC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AAAK,UAAA,SAAS,EAAE5C,OAAO,CAAC0C,OAAxB;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,EAAE,EAAC,MAFL;AAGE,YAAA,QAAQ,MAHV;AAIE,YAAA,KAAK,EAAEvB,WAJT;AAKE,YAAA,QAAQ,EAAGY,KAAD,IAAWX,cAAc,CAACW,KAAK,CAACY,MAAN,CAAaC,KAAd;AALrC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAuBE;AAAK,QAAA,SAAS,EAAE5C,OAAO,CAAC0C,OAAxB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,EAAE,EAAC,SADL;AAEE,UAAA,IAAI,EAAC,GAFP;AAGE,UAAA,QAAQ,MAHV;AAIE,UAAA,KAAK,EAAErB,cAJT;AAKE,UAAA,QAAQ,EAAGU,KAAD,IAAWT,iBAAiB,CAACS,KAAK,CAACY,MAAN,CAAaC,KAAd;AALxC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF,eAkCE;AAAK,QAAA,SAAS,EAAE5C,OAAO,CAAC6C,OAAxB;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAwCGT,YAAY,iBACX,QAAC,YAAD;AACE,MAAA,MAAM,EAAEA,YAAY,CAACC,MADvB;AAEE,MAAA,KAAK,EAAED,YAAY,CAACE,KAFtB;AAGE,MAAA,OAAO,EAAEF,YAAY,CAACrB;AAHxB;AAAA;AAAA;AAAA;AAAA,YAzCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD;;AAED,eAAeC,WAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nimport classes from './contact-form.module.css';\nimport Notification from '../ui/notification';\n\nasync function sendContactData(contactDetails) {\n  const response = await fetch('/api/contact', {\n    method: 'POST',\n    body: JSON.stringify(contactDetails),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Something went wrong!');\n  }\n}\n\nfunction ContactForm() {\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredMessage, setEnteredMessage] = useState('');\n  const [requestStatus, setRequestStatus] = useState(); // 'pending', 'success', 'error'\n  const [requestError, setRequestError] = useState();\n\n  useEffect(() => {\n    if (requestStatus === 'success' || requestStatus === 'error') {\n      const timer = setTimeout(() => {\n        setRequestStatus(null);\n        setRequestError(null);\n      }, 3000);\n\n      return () => clearTimeout(timer);\n    }\n  }, [requestStatus]);\n\n  async function sendMessageHandler(event) {\n    event.preventDefault();\n\n    // optional: add client-side validation\n\n    setRequestStatus('pending');\n\n    try {\n      await sendContactData({\n        email: enteredEmail,\n        name: enteredName,\n        message: enteredMessage,\n      });\n      setRequestStatus('success');\n      setEnteredMessage('');\n      setEnteredEmail('');\n      setEnteredName('');\n    } catch (error) {\n      setRequestError(error.message);\n      setRequestStatus('error');\n    }\n  }\n\n  let notification;\n\n  if (requestStatus === 'pending') {\n    notification = {\n      status: 'pending',\n      title: 'Sending message...',\n      message: 'Your message is on its way!',\n    };\n  }\n\n  if (requestStatus === 'success') {\n    notification = {\n      status: 'success',\n      title: 'Success!',\n      message: 'Message sent successfully!',\n    };\n  }\n\n  if (requestStatus === 'error') {\n    notification = {\n      status: 'error',\n      title: 'Error!',\n      message: requestError,\n    };\n  }\n\n  return (\n    <section className={classes.contact}>\n      <h1>How can I help you?</h1>\n      <form className={classes.form} onSubmit={sendMessageHandler}>\n        <div className={classes.controls}>\n          <div className={classes.control}>\n            <label htmlFor='email'>Your Email</label>\n            <input\n              type='email'\n              id='email'\n              required\n              value={enteredEmail}\n              onChange={(event) => setEnteredEmail(event.target.value)}\n            />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='name'>Your Name</label>\n            <input\n              type='text'\n              id='name'\n              required\n              value={enteredName}\n              onChange={(event) => setEnteredName(event.target.value)}\n            />\n          </div>\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='message'>Your Message</label>\n          <textarea\n            id='message'\n            rows='5'\n            required\n            value={enteredMessage}\n            onChange={(event) => setEnteredMessage(event.target.value)}\n          ></textarea>\n        </div>\n\n        <div className={classes.actions}>\n          <button>Send Message</button>\n        </div>\n      </form>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n    </section>\n  );\n}\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}